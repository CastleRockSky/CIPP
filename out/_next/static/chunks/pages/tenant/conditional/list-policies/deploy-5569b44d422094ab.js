(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4195],{31748:(e,t,l)=>{"use strict";l.d(t,{d:()=>i});var a=l(37876),o=l(22474),n=l(37832),s=l(35764);let i=e=>{let{allTenants:t,type:l="single",valueField:i="defaultDomainName",onNextStep:r,formControl:p,currentStep:c,onPreviousStep:u,preText:d}=e;return(0,a.jsxs)(o.A,{spacing:3,children:[d,(0,a.jsx)("label",{children:"Select a tenant"}),(0,a.jsx)(s.w,{valueField:i,formControl:p,allTenants:t,type:l,preselectedEnabled:!0}),(0,a.jsx)(n.L,{currentStep:c,onPreviousStep:u,onNextStep:r,formControl:p})]})}},37426:(e,t,l)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/tenant/conditional/list-policies/deploy",function(){return l(42101)}])},42101:(e,t,l)=>{"use strict";l.r(t),l.d(t,{default:()=>h});var a=l(37876),o=l(12435),n=l(63968),s=l(40971),i=l(31748),r=l(22474),p=l(37832),c=l(49814),u=l(58105),d=l(22322),m=l(14232),b=l(88992);let y=e=>{let{formControl:t,onPreviousStep:l,onNextStep:o,currentStep:n}=e,s=t.getValues(),i=(0,d.R_)({url:"/api/ListCATemplates",queryKey:"CATemplates"}),[y,f]=(0,m.useState)(),h=(0,b.FH)({control:t.control,name:"TemplateList"});return(0,m.useEffect)(()=>{if(i.isSuccess&&(null==h?void 0:h.value)){let e=i.data.find(e=>e.GUID===h.value);e&&(f(e),t.setValue("rawjson",JSON.stringify(e,null)))}},[i,h]),(0,a.jsxs)(r.A,{spacing:3,children:[(0,a.jsxs)(r.A,{spacing:3,children:[(0,a.jsx)(u.A,{type:"autoComplete",name:"TemplateList",label:"Please choose a template to apply.",isFetching:i.isLoading,multiple:!1,formControl:t,options:i.isSuccess?i.data.map(e=>({label:e.displayName,value:e.GUID})):[]}),(0,a.jsx)(u.A,{type:"hidden",name:"rawjson",label:"Conditional Access Parameters",placeholder:"Enter the JSON information to use as parameters, or select from a template",formControl:t}),(0,a.jsx)(c.A,{object:y}),(0,a.jsx)(u.A,{type:"radio",name:"replacename",label:"How should groups and users be handled?",formControl:t,options:[{value:"leave",label:"Leave the groups and users as is"},{value:"displayName",label:"Replace by display name"},{value:"AllUsers",label:"Remove all exclusions, apply to all users"}]}),(0,a.jsx)(u.A,{type:"radio",name:"newstate",label:"Policy State",formControl:t,options:[{value:"donotchange",label:"Do not change state"},{value:"Enabled",label:"Set to enabled"},{value:"Disabled",label:"Set to disabled"},{value:"enabledForReportingButNotEnforced",label:"Set to report only"}]}),(0,a.jsx)(u.A,{type:"switch",name:"overwrite",label:"Overwrite Existing Policy",formControl:t}),(0,a.jsx)(u.A,{type:"switch",name:"DisableSD",label:"Disable Security Defaults if enabled when creating policy",formControl:t})]}),(0,a.jsx)(p.L,{currentStep:n,onPreviousStep:l,onNextStep:o,noNextButton:"UpdateTokens"===s.selectedOption,formControl:t,noSubmitButton:!0})]})},f=()=>{let e=[{title:"Step 1",description:"Tenant Selection",component:i.d,componentProps:{type:"multiple"}},{title:"Step 2",description:"Conditional Access Configuration",component:y},{title:"Step 3",description:"Confirmation",component:n.J}];return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(s.A,{steps:e,wizardTitle:"Deploy CA Policy",postUrl:"/api/AddCAPolicy"})})};f.getLayout=e=>(0,a.jsx)(o.P,{children:e});let h=f}},e=>{var t=t=>e(e.s=t);e.O(0,[5918,9814,636,6593,8792],()=>t(37426)),_N_E=e.O()}]);